---
// import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';

import Content from '@/templates/Content.astro';
import type {
  ArticleFrontmatterPage,
  IPost,
} from '@/types/IArticleFrontmatter';
import { sortByDate } from '@/utils/Posts';
import { DormitoryIntroduction } from '@/utils/StaticPages';

type GetStaticPaths = {
  paginate: any;
}; // Overrides `GetStaticPathsOptions` types from Astro

export async function getNonDraftPosts() {
  const allPosts: IPost[] = await getCollection('posts', ({ data }) => {
    return data.draft !== true;
  });
  allPosts.push(DormitoryIntroduction);

  return allPosts;
}

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const nonDraftPosts = await getNonDraftPosts();
  const sortedPosts = sortByDate(nonDraftPosts);

  return paginate(sortedPosts, { pageSize: 9 });
}

interface Props {
  page: ArticleFrontmatterPage;
  preTitle?: string | number;
}

const { page, preTitle } = Astro.props as Props;
const nonDraftPosts = await getNonDraftPosts();
---

<Content
  page={page}
  contentCategory="Posts"
  contentDescription="日々のアクティビティなど"
  preTitle={preTitle}
  contents={nonDraftPosts}
/>
