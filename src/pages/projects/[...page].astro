---
import Content from '@/templates/Content.astro';
import type {
  IProjectFrontmatter,
  ProjectFrontmatterPage,
} from '@/types/IProjectFrontmatter';
import { sortByOrder } from '@/utils/Posts';
import type { StaticPost } from '@/utils/StaticPages';
import { DormitoryIntroduction } from '@/utils/StaticPages';

type GetStaticPaths = {
  paginate: any;
}; // Overrides `GetStaticPathsOptions` types from Astro

export async function getNonDraftPosts() {
  const allPosts: StaticPost[] = await Astro.glob<IProjectFrontmatter>(
    './*.md'
  );
  allPosts.push(DormitoryIntroduction);

  const nonDraftPosts = allPosts.filter((post) => !post.frontmatter.draft);

  return nonDraftPosts;
}

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const nonDraftPosts = await getNonDraftPosts();

  const sortedPosts = sortByOrder(nonDraftPosts);

  return paginate(sortedPosts, { pageSize: 9 });
}

interface Props {
  page: ProjectFrontmatterPage;
  preTitle?: string | number;
}

const { page, preTitle } = Astro.props as Props;
const nonDraftPosts = await getNonDraftPosts();
---

<Content
  page={page}
  contentCategory="Projects"
  contentDescription="継続してやってることやプロジェクト的なものなど"
  preTitle={preTitle}
  contents={nonDraftPosts}
/>
