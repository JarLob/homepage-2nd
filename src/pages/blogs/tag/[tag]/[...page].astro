---
import Blogs from '@/templates/Blogs.astro';
import type { BlogPage } from '@/types/IBlogPage';
import { BlogTags } from '@/utils/Blog';
import { getSortedZennData } from '@/utils/Zenn';

type GetStaticPaths = {
  paginate: any;
}; // Overrides `GetStaticPathsOptions` types from Astro

export async function getStaticPaths({ paginate }: GetStaticPaths) {
  const sortedZenns = await getSortedZennData();

  return Object.keys(BlogTags).map((tagName) => {
    const filteredPosts = sortedZenns.filter(
      (post) => post.type === tagName.toLowerCase()
    );
    return paginate(filteredPosts, { params: { tag: tagName }, pageSize: 9 });
  });
}

interface Props {
  page: BlogPage;
  preTitle?: string | number;
}

const { page, preTitle } = Astro.props as Props;
---

<Blogs
  page={page}
  contentCategory="Blogs"
  contentDescription="外部のブログ記事（自動更新）"
  preTitle={preTitle}
/>
